<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-5.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

<bean id="customPasswordEncoder" class="com.it.security.CustomPasswordEncoder"></bean>

<security:http auto-config="true" use-expressions="true">
	<security:intercept-url pattern="/sample/all" access="permitAll"/>
	<security:intercept-url pattern="/sample/member" access="hasRole('ROLE_MEMBER')"/>
	<security:intercept-url pattern="/sample/admin" access="hasRole('ROLE_ADMIN')"/>
	<security:form-login/>

	<security:logout logout-url="/member/logout" invalidate-session="true"/>	
	<security:access-denied-handler error-page="/member/accessError"/>

</security:http>

<security:authentication-manager>
	<security:authentication-provider>
		<!-- <security:user-service>
			<security:user name="member" password="{noop}member" authorities="ROLE_MEMBER"/>
			<security:user name="admin" password="{noop}admin" authorities="ROLE_MEMBER, ROLE_ADMIN"/>
		</security:user-service> -->
		<security:jdbc-user-service data-source-ref="dataSource" users-by-username-query="select member_id as username, member_pwd as password, enabled as enabled from member where member_id = ?" 
		authorities-by-username-query="select member_id as username, authority as authority from member u where member_id = ?"/>
		<security:password-encoder ref="customPasswordEncoder"/>
	</security:authentication-provider>
</security:authentication-manager>
</beans>


